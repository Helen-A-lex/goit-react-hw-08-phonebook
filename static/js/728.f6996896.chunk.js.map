{"version":3,"file":"static/js/728.f6996896.chunk.js","mappings":"iPAEaA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mWAeZE,EAAgBF,EAAAA,GAAAA,MAAH,qLASbG,GAAgBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,qPAYbK,EAAiBL,EAAAA,GAAAA,OAAH,wU,mBC3BZ,SAASM,IACtB,IAEMC,GAAWC,EAAAA,EAAAA,MAiBXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WAAWC,IAAI,GAClCC,MAAOL,EAAAA,KAAaI,IAAI,GAAGD,WAC3BG,SAAUN,EAAAA,KAAaI,IAAI,GAAGG,IAAI,IAAIJ,aAGxC,OACE,SAAC,KAAD,CACEK,cA3BkB,CAAEN,KAAM,GAAIG,MAAO,GAAIC,SAAU,IA4BnDG,iBAAkBV,EAClBW,SAzBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAIH,GACZ,IAAQT,EAA0BS,EAA1BT,KAAMG,EAAoBM,EAApBN,MAAOC,EAAaK,EAAbL,SAErBT,GACEkB,EAAAA,EAAAA,IAAS,CACPb,KAAAA,EACAG,MAAAA,EACAC,SAAAA,KAIJM,GACD,EASC,UAKE,UAACvB,EAAD,YACE,UAACG,EAAD,CAAewB,QAAQ,YAAvB,UAAmC,YAEjC,SAACvB,EAAD,CAAewB,KAAK,OAAOf,KAAK,UAChC,SAAC,KAAD,CAAcA,KAAK,aAGrB,UAACV,EAAD,CAAewB,QAAQ,aAAvB,UAAoC,SAElC,SAACvB,EAAD,CAAewB,KAAK,QAAQf,KAAK,WACjC,SAAC,KAAD,CAAcA,KAAK,cAGrB,UAACV,EAAD,CAAewB,QAAQ,gBAAvB,UAAuC,YAErC,SAACvB,EAAD,CAAewB,KAAK,WAAWf,KAAK,cACpC,SAAC,KAAD,CAAcA,KAAK,iBAErB,SAACP,EAAD,CAAgBsB,KAAK,SAArB,SAA8B,iBAIrC,CChEc,SAASC,IACtB,OACE,0BACE,SAACtB,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const FormRegister = styled(Form)`\n  border: 2px solid yellow;\n  border-radius: 40px;\n  background: linear-gradient(146deg, #6c6c66, transparent);\n  width: 400px;\n  height: 360px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  margin-right: auto;\n  margin-left: auto;\n`;\nexport const LabelRegister = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 15px;\n  font-weight: 600;\n  font-family: sans-serif;\n  color: rgb(217, 232, 64);\n`;\nexport const InputRegister = styled(Field)`\n  width: 200px;\n  border: 1px solid #dcdbdb;\n  padding: 5px;\n  font-size: 15px;\n  outline: transparent;\n\n  &:focus {\n    border: 1px solid rgb(197 216 14);\n    box-shadow: rgb(207 226 21) 5px 0px 27px -8px;\n  }\n`;\nexport const ButtonRegister = styled.button`\n  width: 100px;\n  padding: 5px;\n  background-color: white;\n  border: 1px solid #dedede;\n  font-size: 13px;\n  font-weight: 600;\n  border-radius: 6px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(202 222 4);\n    box-shadow: 5px 0px 27px -8px rgba(91, 95, 206, 1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/auth-operations';\nimport {\n  FormRegister,\n  LabelRegister,\n  InputRegister,\n  ButtonRegister,\n} from '../../components/RegisterForm/RegisterForm.styled';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nexport default function RegisterForm() {\n  const initialValues = { name: '', email: '', password: '' };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    const { name, email, password } = values;\n\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n\n    resetForm();\n  };\n\n  const schema = Yup.object().shape({\n    name: Yup.string().required().min(4),\n    email: Yup.string().min(4).required(),\n    password: Yup.string().min(5).max(16).required(),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormRegister>\n        <LabelRegister htmlFor=\"user_name\">\n          Username\n          <InputRegister type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" />\n        </LabelRegister>\n\n        <LabelRegister htmlFor=\"user_email\">\n          Email\n          <InputRegister type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" />\n        </LabelRegister>\n\n        <LabelRegister htmlFor=\"user_password\">\n          Password\n          <InputRegister type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" />\n        </LabelRegister>\n        <ButtonRegister type=\"submit\">Register</ButtonRegister>\n      </FormRegister>\n    </Formik>\n  );\n}\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nexport default function Register() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["FormRegister","styled","Form","LabelRegister","InputRegister","Field","ButtonRegister","RegisterForm","dispatch","useDispatch","schema","Yup","shape","name","required","min","email","password","max","initialValues","validationSchema","onSubmit","values","resetForm","console","log","register","htmlFor","type","Register"],"sourceRoot":""}