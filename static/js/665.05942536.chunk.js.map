{"version":3,"file":"static/js/665.05942536.chunk.js","mappings":"mPAWe,SAASA,IACtB,IAEMC,GAAWC,EAAAA,EAAAA,MAiBXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WAAWC,IAAI,GAClCC,MAAOL,EAAAA,KAAaI,IAAI,GAAGD,WAC3BG,SAAUN,EAAAA,KAAaI,IAAI,GAAGG,IAAI,IAAIJ,aAGxC,OACE,SAAC,KAAD,CACEK,cA3BkB,CAAEN,KAAM,GAAIG,MAAO,GAAIC,SAAU,IA4BnDG,iBAAkBV,EAClBW,SAzBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAIH,GACZ,IAAQT,EAA0BS,EAA1BT,KAAMG,EAAoBM,EAApBN,MAAOC,EAAaK,EAAbL,SAErBT,GACEkB,EAAAA,EAAAA,IAAS,CACPb,KAAAA,EACAG,MAAAA,EACAC,SAAAA,KAIJM,GACD,EASC,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,CAAOI,QAAQ,YAAf,UAA2B,YAEzB,SAAC,KAAD,CAAOC,KAAK,OAAOf,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,aAGrB,UAAC,KAAD,CAAOc,QAAQ,aAAf,UAA4B,SAE1B,SAAC,KAAD,CAAOC,KAAK,QAAQf,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,cAGrB,UAAC,KAAD,CAAOc,QAAQ,gBAAf,UAA+B,YAE7B,SAAC,KAAD,CAAOC,KAAK,WAAWf,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,iBAErB,SAAC,KAAD,CAAwBe,KAAK,SAA7B,SAAsC,iBAI7C,CChEc,SAASC,IACtB,OACE,0BACE,SAACtB,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/auth-operations';\nimport {\n  FormWrap,\n  Label,\n  Input,\n  ButtonAddDeleteContact,\n} from 'components/ContactForm/ContactForm.styled';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nexport default function RegisterForm() {\n  const initialValues = { name: '', email: '', password: '' };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    const { name, email, password } = values;\n\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n\n    resetForm();\n  };\n\n  const schema = Yup.object().shape({\n    name: Yup.string().required().min(4),\n    email: Yup.string().min(4).required(),\n    password: Yup.string().min(5).max(16).required(),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormWrap>\n        <Label htmlFor=\"user_name\">\n          Username\n          <Input type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" />\n        </Label>\n\n        <Label htmlFor=\"user_email\">\n          Email\n          <Input type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" />\n        </Label>\n\n        <Label htmlFor=\"user_password\">\n          Password\n          <Input type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" />\n        </Label>\n        <ButtonAddDeleteContact type=\"submit\">Register</ButtonAddDeleteContact>\n      </FormWrap>\n    </Formik>\n  );\n}\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nexport default function Register() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","schema","Yup","shape","name","required","min","email","password","max","initialValues","validationSchema","onSubmit","values","resetForm","console","log","register","htmlFor","type","Register"],"sourceRoot":""}