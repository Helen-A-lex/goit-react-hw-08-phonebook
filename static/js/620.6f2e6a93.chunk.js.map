{"version":3,"file":"static/js/620.6f2e6a93.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Form = styled.form`\n  border: 1px solid black;\n  width: 400px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 20px;\n  font-family: sans-serif;\n`;\nexport const Input = styled.input`\n  width: 200px;\n  border: 1px solid #dcdbdb;\n  padding: 5px;\n  font-size: 15px;\n  outline: transparent;\n\n  &:focus {\n    border: 1px solid #987dc6;\n    box-shadow: 5px 0px 27px -8px rgba(115, 62, 146, 1);\n  }\n`;\nexport const ButtonAddDeleteContact = styled.button`\n  width: 100px;\n  padding: 5px;\n  background-color: white;\n  border: 1px solid #dedede;\n  font-size: 13px;\n  font-weight: 600;\n  border-radius: 6px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #5858f0;\n    box-shadow: 5px 0px 27px -8px rgba(91, 95, 206, 1);\n  }\n`;\n","import styled from 'styled-components';\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 15px;\n  position: relative;\n  &::before {\n    content: '';\n    position: absolute;\n    left: -20px;\n    top: 10px;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ListItem } from './ContactListItem.styled';\nimport { ButtonAddDeleteContact } from 'components/ContactForm/ContactForm.styled';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nexport const ContactListItem = ({ contact }) => {\n  console.log(contact);\n  const dispatch = useDispatch();\n\n\n  const handleDeleteContact = async () => {\n    await dispatch(deleteContact(contact.id));\n    dispatch(fetchContacts());\n  };\n\n  return (\n    <>\n      <ListItem key={contact.id}>\n        {contact.name} : {contact.phone} \n        <ButtonAddDeleteContact\n          onClick={handleDeleteContact}\n          \n        >\n          Delete\n        </ButtonAddDeleteContact>\n      </ListItem>\n    </>\n  );\n};\nContactListItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nexport const ContactsList = styled.ul`\n  margin-top: 20px;\n  margin-left: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { ContactsList } from './ContactList.styled';\n\nimport { getFilterValue } from '../../redux/filterSlice';\nimport { selectContactsItems } from '../../redux/contacts/contactsSlice';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsItems);\n\n  const filter = useSelector(getFilterValue);\n\n  const getFilteredContacts = (contacts, filter) => {\n   \n    if (filter) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  if (!filteredContacts || filteredContacts.length === 0) {\n    return <div>No contacts found</div>;\n  }\n  return (\n    <ContactsList>\n      {filteredContacts.map(contact => (\n        <ContactListItem key={contact.id} contact={contact} />\n      ))}\n    </ContactsList>\n  );\n};\n","import { useState } from 'react';\nimport {\n  Form,\n  Label,\n  Input,\n  ButtonAddDeleteContact,\n} from './ContactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsItems } from '../../redux/contacts/contactsSlice';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const isDuplicateName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isDuplicateName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, phone }));\n\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"user_name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label htmlFor=\"user_tel\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={phone}\n          onChange={handleChange}\n        />\n      </Label>\n      <ButtonAddDeleteContact type=\"submit\">Add contact</ButtonAddDeleteContact>\n    </Form>\n  );\n}\n","import { Label, Input } from 'components/ContactForm/ContactForm.styled';\nimport { getFilterValue, setFilter } from '../../redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValue);\n\n  const changeFilter = evt => {\n    return dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={changeFilter} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\nexport const Title = styled.h1`\n  font-size: 30px;\n  margin-bottom: 30px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title } from '../components/App/App.styled';\nimport { selectIsLoading } from '../redux/contacts/contactsSlice';\nimport { selectError } from '../redux/contacts/contactsSlice';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n      <Title>Add new contact</Title>\n      <ContactForm />\n      <Title>Find the desired contact</Title>\n      <Filter />\n    </>\n  );\n}\n"],"names":["Form","styled","Label","Input","ButtonAddDeleteContact","ListItem","ContactListItem","contact","console","log","dispatch","useDispatch","handleDeleteContact","deleteContact","id","fetchContacts","name","phone","onClick","ContactsList","ContactList","filteredContacts","contacts","filter","toLowerCase","includes","getFilteredContacts","useSelector","selectContactsItems","getFilterValue","length","map","ContactForm","useState","setName","setPhone","handleChange","evt","target","value","onSubmit","preventDefault","find","alert","addContact","htmlFor","type","pattern","title","required","onChange","Filter","setFilter","Title","Contacts","isLoading","selectIsLoading","error","selectError","useEffect"],"sourceRoot":""}