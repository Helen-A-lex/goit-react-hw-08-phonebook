{"version":3,"file":"static/js/690.d7d35f34.chunk.js","mappings":"6PAYe,SAASA,IAEtB,IAEMC,GAAWC,EAAAA,EAAAA,MAgBbC,EAASC,EAAAA,KAAaC,MAAM,CAC7BC,MAAOF,EAAAA,KAAaG,IAAI,GAAGC,WAC5BC,SAAUL,EAAAA,KAAaG,IAAI,GAAGG,IAAI,IAAIF,aAEjCG,GAASC,EAAAA,EAAAA,IAAU,CACxBC,cAvBoB,CAAEP,MAAO,GAAIG,SAAU,IAwB3CK,SApBmB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAGtBV,EAAoBS,EAApBT,MAAOG,EAAaM,EAAbN,SAQfR,GAASgB,EAAAA,EAAAA,IAAM,CAACX,MAAAA,EAAOG,SAAAA,KACvBO,GACD,EAQCE,iBAAkBf,IAIpB,OAEE,UAAC,KAAD,CAAUW,SAAWH,EAAOQ,aAA5B,WACE,UAAC,KAAD,CAAOC,QAAQ,aAAf,UAA4B,SAExB,SAAC,MAAD,QAAOC,KAAK,QAAQC,KAAK,SAAYX,EAAOY,cAAc,YAC1D,SAAC,KAAD,CAAcD,KAAK,cAGvB,UAAC,KAAD,CAAOF,QAAQ,gBAAf,UAA+B,YAE3B,SAAC,MAAD,QAAOC,KAAK,WAAWC,KAAK,YAAeX,EAAOY,cAAc,eAChE,SAAC,KAAD,CAAcD,KAAK,iBAEvB,SAAC,KAAD,CAAwBD,KAAK,SAA7B,SAAsC,YAI3C,CC3Dc,SAASG,IACtB,OACE,0BACE,SAACxB,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport {\n  FormWrap,\n  Label,\n  Input,\n  ButtonAddDeleteContact,\n  \n} from 'components/ContactForm/ContactForm.styled';\nimport { ErrorMessage,useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nexport default function LoginForm() {\n\n  const initialValues = { email: '', password: '' };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    // evt.preventDefault();\n    // const form = evt.currentTarget;\n    const { email, password } = values;\n   \n    // dispatch(\n    //   logIn({\n    //     email: form.elements.email.value,\n    //     password: form.elements.password.value,\n    //   })\n    // );\n    dispatch(logIn({email, password}));\n    resetForm();\n  };\nconst schema = Yup.object().shape({\n     email: Yup.string().min(4).required(),\n    password: Yup.string().min(5).max(16).required(),\n});\n   const formik = useFormik({\n    initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: schema,\n  });\n  \n  \n  return (\n    // <Formik initialValues={initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n    <FormWrap onSubmit ={formik.handleSubmit}>\n      <Label htmlFor=\"user_email\">\n        Email\n          <Input type=\"email\" name=\"email\" {...formik.getFieldProps('email')}/>\n          <ErrorMessage name='email'/>\n      </Label>\n\n      <Label htmlFor=\"user_password\">\n        Password\n          <Input type=\"password\" name=\"password\" {...formik.getFieldProps('password')}/>\n          <ErrorMessage name='password'/>\n      </Label>\n      <ButtonAddDeleteContact type=\"submit\">Login</ButtonAddDeleteContact>\n      </FormWrap>\n    // </Formik>\n  );\n}\n","import LoginForm from '../components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","schema","Yup","shape","email","min","required","password","max","formik","useFormik","initialValues","onSubmit","values","resetForm","logIn","validationSchema","handleSubmit","htmlFor","type","name","getFieldProps","Login"],"sourceRoot":""}